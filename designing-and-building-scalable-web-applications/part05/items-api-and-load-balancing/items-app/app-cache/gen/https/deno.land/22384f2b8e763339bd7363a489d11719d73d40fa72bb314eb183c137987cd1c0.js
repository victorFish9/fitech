// Copyright 2018-2022 the Deno authors. All rights reserved. MIT license.
import { CFISBIS } from "./_fs_stat.ts";
export function lstat(path, optionsOrCallback, maybeCallback) {
  const callback = typeof optionsOrCallback === "function" ? optionsOrCallback : maybeCallback;
  const options = typeof optionsOrCallback === "object" ? optionsOrCallback : {
    bigint: false
  };
  if (!callback) throw new Error("No callback function supplied");
  Deno.lstat(path).then((stat)=>callback(null, CFISBIS(stat, options.bigint)), (err)=>callback(err));
}
export function lstatSync(path, options) {
  const origin = Deno.lstatSync(path);
  return CFISBIS(origin, options?.bigint || false);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImh0dHBzOi8vZGVuby5sYW5kL3N0ZEAwLjEzMi4wL25vZGUvX2ZzL19mc19sc3RhdC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAxOC0yMDIyIHRoZSBEZW5vIGF1dGhvcnMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuIE1JVCBsaWNlbnNlLlxuaW1wb3J0IHtcbiAgQmlnSW50U3RhdHMsXG4gIENGSVNCSVMsXG4gIHN0YXRDYWxsYmFjayxcbiAgc3RhdENhbGxiYWNrQmlnSW50LFxuICBzdGF0T3B0aW9ucyxcbiAgU3RhdHMsXG59IGZyb20gXCIuL19mc19zdGF0LnRzXCI7XG5cbmV4cG9ydCBmdW5jdGlvbiBsc3RhdChwYXRoOiBzdHJpbmcgfCBVUkwsIGNhbGxiYWNrOiBzdGF0Q2FsbGJhY2spOiB2b2lkO1xuZXhwb3J0IGZ1bmN0aW9uIGxzdGF0KFxuICBwYXRoOiBzdHJpbmcgfCBVUkwsXG4gIG9wdGlvbnM6IHsgYmlnaW50OiBmYWxzZSB9LFxuICBjYWxsYmFjazogc3RhdENhbGxiYWNrLFxuKTogdm9pZDtcbmV4cG9ydCBmdW5jdGlvbiBsc3RhdChcbiAgcGF0aDogc3RyaW5nIHwgVVJMLFxuICBvcHRpb25zOiB7IGJpZ2ludDogdHJ1ZSB9LFxuICBjYWxsYmFjazogc3RhdENhbGxiYWNrQmlnSW50LFxuKTogdm9pZDtcbmV4cG9ydCBmdW5jdGlvbiBsc3RhdChcbiAgcGF0aDogc3RyaW5nIHwgVVJMLFxuICBvcHRpb25zT3JDYWxsYmFjazogc3RhdENhbGxiYWNrIHwgc3RhdENhbGxiYWNrQmlnSW50IHwgc3RhdE9wdGlvbnMsXG4gIG1heWJlQ2FsbGJhY2s/OiBzdGF0Q2FsbGJhY2sgfCBzdGF0Q2FsbGJhY2tCaWdJbnQsXG4pIHtcbiAgY29uc3QgY2FsbGJhY2sgPVxuICAgICh0eXBlb2Ygb3B0aW9uc09yQ2FsbGJhY2sgPT09IFwiZnVuY3Rpb25cIlxuICAgICAgPyBvcHRpb25zT3JDYWxsYmFja1xuICAgICAgOiBtYXliZUNhbGxiYWNrKSBhcyAoXG4gICAgICAgIC4uLmFyZ3M6IFtFcnJvcl0gfCBbbnVsbCwgQmlnSW50U3RhdHMgfCBTdGF0c11cbiAgICAgICkgPT4gdm9pZDtcbiAgY29uc3Qgb3B0aW9ucyA9IHR5cGVvZiBvcHRpb25zT3JDYWxsYmFjayA9PT0gXCJvYmplY3RcIlxuICAgID8gb3B0aW9uc09yQ2FsbGJhY2tcbiAgICA6IHsgYmlnaW50OiBmYWxzZSB9O1xuXG4gIGlmICghY2FsbGJhY2spIHRocm93IG5ldyBFcnJvcihcIk5vIGNhbGxiYWNrIGZ1bmN0aW9uIHN1cHBsaWVkXCIpO1xuXG4gIERlbm8ubHN0YXQocGF0aCkudGhlbihcbiAgICAoc3RhdCkgPT4gY2FsbGJhY2sobnVsbCwgQ0ZJU0JJUyhzdGF0LCBvcHRpb25zLmJpZ2ludCkpLFxuICAgIChlcnIpID0+IGNhbGxiYWNrKGVyciksXG4gICk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBsc3RhdFN5bmMocGF0aDogc3RyaW5nIHwgVVJMKTogU3RhdHM7XG5leHBvcnQgZnVuY3Rpb24gbHN0YXRTeW5jKFxuICBwYXRoOiBzdHJpbmcgfCBVUkwsXG4gIG9wdGlvbnM6IHsgYmlnaW50OiBmYWxzZSB9LFxuKTogU3RhdHM7XG5leHBvcnQgZnVuY3Rpb24gbHN0YXRTeW5jKFxuICBwYXRoOiBzdHJpbmcgfCBVUkwsXG4gIG9wdGlvbnM6IHsgYmlnaW50OiB0cnVlIH0sXG4pOiBCaWdJbnRTdGF0cztcbmV4cG9ydCBmdW5jdGlvbiBsc3RhdFN5bmMoXG4gIHBhdGg6IHN0cmluZyB8IFVSTCxcbiAgb3B0aW9ucz86IHN0YXRPcHRpb25zLFxuKTogU3RhdHMgfCBCaWdJbnRTdGF0cyB7XG4gIGNvbnN0IG9yaWdpbiA9IERlbm8ubHN0YXRTeW5jKHBhdGgpO1xuICByZXR1cm4gQ0ZJU0JJUyhvcmlnaW4sIG9wdGlvbnM/LmJpZ2ludCB8fCBmYWxzZSk7XG59XG4iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsMEVBQTBFO0FBQzFFLFNBRUUsT0FBTyxRQUtGLGdCQUFnQjtBQWF2QixPQUFPLFNBQVMsTUFDZCxJQUFrQixFQUNsQixpQkFBa0UsRUFDbEUsYUFBaUQ7RUFFakQsTUFBTSxXQUNILE9BQU8sc0JBQXNCLGFBQzFCLG9CQUNBO0VBR04sTUFBTSxVQUFVLE9BQU8sc0JBQXNCLFdBQ3pDLG9CQUNBO0lBQUUsUUFBUTtFQUFNO0VBRXBCLElBQUksQ0FBQyxVQUFVLE1BQU0sSUFBSSxNQUFNO0VBRS9CLEtBQUssS0FBSyxDQUFDLE1BQU0sSUFBSSxDQUNuQixDQUFDLE9BQVMsU0FBUyxNQUFNLFFBQVEsTUFBTSxRQUFRLE1BQU0sSUFDckQsQ0FBQyxNQUFRLFNBQVM7QUFFdEI7QUFXQSxPQUFPLFNBQVMsVUFDZCxJQUFrQixFQUNsQixPQUFxQjtFQUVyQixNQUFNLFNBQVMsS0FBSyxTQUFTLENBQUM7RUFDOUIsT0FBTyxRQUFRLFFBQVEsU0FBUyxVQUFVO0FBQzVDIn0=